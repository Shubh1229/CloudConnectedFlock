server {
    listen 80;
    server_name ccflock.duckdns.org;
    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl;
    server_name ccflock.duckdns.org;

    ssl_certificate /etc/nginx/certs/fullchain.pem;
    ssl_certificate_key /etc/nginx/certs/privkey.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;

    # Clean URL rewrites
    location /login {
        rewrite ^/login$ /login.html break;
        root /usr/share/nginx/html;
    }

    location /register {
        rewrite ^/register$ /register.html break;
        root /usr/share/nginx/html;
    }

    location /hub {
        rewrite ^/hub$ /hub.html break;
        root /usr/share/nginx/html;
    }

    location /about {
        rewrite ^/about$ /about.html break;
        root /usr/share/nginx/html;
    }

    location /license {
        rewrite ^/license$ /license.html break;
        root /usr/share/nginx/html;
    }

    # Proxy API requests
    location /api/login {
        proxy_pass http://login-service:80/Login/login;
    }

    location /api/register {
        proxy_pass http://login-service:80/Login/register;
    }

    location /api/online-users {
        proxy_pass http://hub-service:80/OnlineUsers/onlineusers;
    }

    location /api/heartbeat {
        proxy_pass http://hub-service:80/Heartbeat/sendheartbeat;
        proxy_set_header Authorization $http_authorization;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    location /api/getweather {
        proxy_pass http://hub-service:80/Weather/weather;
    }

    # Static file fallback
    location / {
        root /usr/share/nginx/html;
        index login.html;
        try_files $uri $uri/ /404.html;
    }
}


